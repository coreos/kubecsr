// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/coreos/kubecsr/pkg/cloudprovider (interfaces: Interface)

// Package fake is a generated GoMock package.
package fake

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// Fake is a mock of Interface interface
type Fake struct {
	ctrl     *gomock.Controller
	recorder *FakeMockRecorder
}

// FakeMockRecorder is the mock recorder for Fake
type FakeMockRecorder struct {
	mock *Fake
}

// NewFake creates a new mock instance
func NewFake(ctrl *gomock.Controller) *Fake {
	mock := &Fake{ctrl: ctrl}
	mock.recorder = &FakeMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *Fake) EXPECT() *FakeMockRecorder {
	return m.recorder
}

// GetInstanceGroupID mocks base method
func (m *Fake) GetInstanceGroupID(arg0 string) (string, error) {
	ret := m.ctrl.Call(m, "GetInstanceGroupID", arg0)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetInstanceGroupID indicates an expected call of GetInstanceGroupID
func (mr *FakeMockRecorder) GetInstanceGroupID(arg0 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetInstanceGroupID", reflect.TypeOf((*Fake)(nil).GetInstanceGroupID), arg0)
}
